# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/model.detector.ipynb.

# %% auto 0
__all__ = ['FasterRCNN']

# %% ../../nbs/model.detector.ipynb 2
import cv2
import timm
import torch
import pickle
import random
import torch.nn as nn
from ..bbox_utils import *
from fastai.vision.all import *
from torchvision.ops import roi_align
from ..fpn import *

# %% ../../nbs/model.detector.ipynb 3
class FasterRCNN(nn.Module):
    def __init__(self, backbone, rpn, roi):
        super().__init__()
        
        #TODO add fpn
        self.backbone= backbone
        self.rpn_head= rpn
        self.roi_head= roi
        # self.fpn= fpn
    
    def forward(self, x, gt_bboxes):
        x = self.backbone(x)[0]
        rpn_reg_feats, rpn_cls_feats= self.rpn_head(x)
        _, gt_rpn_reg, anchors= self.rpn_head.get_rpn_gt(gt_bboxes) 
        rois= reverse_offset(anchors, gt_rpn_reg)
        rois= [tensor(r).unsqueeze(0) for r in rois]
        roi_reg_feats, roi_cls_feats= self.roi_head(x, rois)
        features= dict(rpn_reg_feats=rpn_reg_feats,
                       rpn_cls_feats=rpn_cls_feats,
                       roi_reg_feats=roi_reg_feats,
                       roi_cls_feats=roi_cls_feats)
        return features
